---
import type { APIContext } from 'astro';

export async function get({ params }: APIContext) {
  const id = params.id;
  const apiUrl = `/api/save-result?id=${id}`;
  const res = await fetch(apiUrl);
  if (!res.ok) {
    return {
      props: { notFound: true }
    };
  }
  const result = await res.json();
  return {
    props: { result, id }
  };
}

const { result, id, notFound } = Astro.props;
const title = result?.meta?.videoInfo?.title || 'YouTube Sentiment Analysis Result';
const description = result?.sentimentData
  ? `Positive: ${result.sentimentData.positive}% | Neutral: ${result.sentimentData.neutral}% | Negative: ${result.sentimentData.negative}%`
  : 'See the sentiment breakdown for this YouTube video.';
const ogImage = '/og-image.svg'; // Replace with dynamic OG image if available
const shareUrl = `https://www.senti-meter.com/result/${id}`;
const summaryText = result?.sentimentData
  ? `üé• Just analyzed "${title}"
‚úÖ Positive: ${result.sentimentData.positive}%
‚ûñ Neutral: ${result.sentimentData.neutral}%
‚ùå Negative: ${result.sentimentData.negative}%
üîó ${shareUrl}`
  : '';
---
<html lang="en">
  <head>
    <title>{title}</title>
    <meta name="description" content={description} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={shareUrl} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={ogImage} />
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={shareUrl} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={ogImage} />
    <meta name="robots" content="index, follow" />
    <meta name="author" content="YouTube Sentiment Analyzer" />
    <meta name="keywords" content="youtube, sentiment analysis, comment analysis, video sentiment, ai analysis, free tool" />
    <link rel="canonical" href={shareUrl} />
  </head>
  <body class="bg-gradient-to-br from-blue-50 to-indigo-100 min-h-screen flex items-center justify-center px-4 py-8">
    <main class="max-w-2xl w-full mx-auto bg-white rounded-2xl shadow-xl p-8 md:p-12">
      {notFound ? (
        <div class="text-center text-red-600 text-xl font-bold">Result not found.</div>
      ) : (
        <>
          <h1 class="text-3xl font-bold text-gray-800 mb-4">Sentiment Analysis Result</h1>
          <h2 class="text-lg text-gray-700 mb-2">{title}</h2>
          <div class="mb-6">
            <span class="inline-block bg-green-100 text-green-800 px-3 py-1 rounded-full mr-2">Positive: {result.sentimentData.positive}%</span>
            <span class="inline-block bg-gray-200 text-gray-800 px-3 py-1 rounded-full mr-2">Neutral: {result.sentimentData.neutral}%</span>
            <span class="inline-block bg-red-100 text-red-800 px-3 py-1 rounded-full">Negative: {result.sentimentData.negative}%</span>
          </div>
          <div class="mb-6 p-4 bg-blue-50 rounded-lg">
            <h3 class="text-md font-semibold text-blue-900 mb-2">Summary</h3>
            <p class="text-blue-800 whitespace-pre-line">{result.sentimentData.summary}</p>
          </div>
          <div class="mb-6">
            <button id="copy-summary" class="bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded-lg transition-colors duration-200">Copy Summary</button>
            <span id="copy-status" class="ml-3 text-green-600 text-sm hidden">Copied!</span>
          </div>
          <div class="mb-6">
            <h4 class="font-semibold text-gray-800 mb-2">Sample Comments</h4>
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div>
                <h5 class="text-green-700 font-bold mb-1">Positive</h5>
                <ul class="space-y-1">
                  {result.sentimentData.sampleComments.positive.map((c: string) => <li class="text-green-700 bg-white p-2 rounded border border-gray-200">{c}</li>)}
                </ul>
              </div>
              <div>
                <h5 class="text-gray-700 font-bold mb-1">Neutral</h5>
                <ul class="space-y-1">
                  {result.sentimentData.sampleComments.neutral.map((c: string) => <li class="text-gray-700 bg-white p-2 rounded border border-gray-200">{c}</li>)}
                </ul>
              </div>
              <div>
                <h5 class="text-red-700 font-bold mb-1">Negative</h5>
                <ul class="space-y-1">
                  {result.sentimentData.sampleComments.negative.map((c: string) => <li class="text-red-700 bg-white p-2 rounded border border-gray-200">{c}</li>)}
                </ul>
              </div>
            </div>
          </div>
          <div class="text-center text-gray-500 text-sm mt-8">Share this result: <a href={shareUrl} class="text-blue-600 underline">{shareUrl}</a></div>
        </>
      )}
    </main>
    <script is:inline>window.SUMMARY_TEXT = `{summaryText}`;</script>
    <script is:inline>
      document.addEventListener('DOMContentLoaded', () => {
        const copyBtn = document.getElementById('copy-summary');
        const copyStatus = document.getElementById('copy-status');
        if (copyBtn && copyStatus) {
          copyBtn.addEventListener('click', () => {
            navigator.clipboard.writeText(window.SUMMARY_TEXT);
            copyStatus.classList.remove('hidden');
            setTimeout(() => copyStatus.classList.add('hidden'), 2000);
          });
        }
      });
    </script>
  </body>
</html> 